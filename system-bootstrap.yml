---
- name: System Bootstrap - Encryption, Network, and CPU Configuration
  hosts: all
  become: yes
  gather_facts: yes
  serial: 1
    
  pre_tasks:
    - name: Ensure system is ready for bootstrap
      ping:
      
    - name: Check if system requires reboot before starting
      stat:
        path: /var/run/reboot-required
      register: reboot_required_file
      
    - name: Reboot system if required before bootstrap
      reboot:
        reboot_timeout: "{{ bootstrap_reboot_timeout }}"
        connect_timeout: "{{ bootstrap_wait_for_connection }}"
      when: reboot_required_file.stat.exists
      
  tasks:
    - name: Phase 1 - Disk Encryption Setup
      include_role:
        name: encrypt
      tags:
        - encrypt
        - phase1
        
    - name: Check if reboot is needed after encryption
      stat:
        path: /var/run/reboot-required
      register: encrypt_reboot_required
      
    - name: Reboot after encryption if required
      reboot:
        reboot_timeout: "{{ bootstrap_reboot_timeout }}"
        connect_timeout: "{{ bootstrap_wait_for_connection }}"
      when: encrypt_reboot_required.stat.exists
      tags:
        - encrypt
        - phase1
        
    - name: Phase 2 - Network Interface Renaming
      include_role:
        name: net-rename
      tags:
        - net-rename
        - phase2
        
    - name: Check if reboot is needed after network changes
      stat:
        path: /var/run/reboot-required
      register: network_reboot_required
      
    - name: Reboot after network changes if required
      reboot:
        reboot_timeout: "{{ bootstrap_reboot_timeout }}"
        connect_timeout: "{{ bootstrap_wait_for_connection }}"
      when: network_reboot_required.stat.exists
      tags:
        - net-rename
        - phase2
        
    - name: Phase 3 - CPU Optimization and Tweaks
      include_role:
        name: cpu-tweak
      tags:
        - cpu-tweak
        - phase3
        
  post_tasks:
    - name: Final system status check
      setup:
      
    - name: Verify all services are running
      service_facts:
      
    - name: Display bootstrap completion summary
      debug:
        msg: |
          Bootstrap completed successfully!
          - Disk encryption: Applied
          - Network renaming: Applied  
          - CPU tweaks: Applied
          System is ready for production use.
          
    - name: Check if final reboot is needed
      stat:
        path: /var/run/reboot-required
      register: final_reboot_required
      
    - name: Final reboot if required
      reboot:
        reboot_timeout: "{{ bootstrap_reboot_timeout }}"
        connect_timeout: "{{ bootstrap_wait_for_connection }}"
      when: final_reboot_required.stat.exists
      
  handlers:
    - name: emergency stop
      fail:
        msg: "Bootstrap process halted due to critical error"
